#!/usr/bin/env perl
use strict;
use warnings;

use GraphViz2;
use Music::BachChoralHarmony;

my $id = shift || '000106b_';

my $bach = Music::BachChoralHarmony->new;

my $progression = $bach->parse($id);

my %bigram;
my %score;

my $last = '';
my $key  = '';

for my $struct ( @$progression ) {
    $key ||= $struct->{key};

    my $chord = $struct->{chord};

    if ( $last ) {
        $score{ $last . ' ' . $chord }++;

        if ( !grep { $last eq $_ } @{ $bigram{$chord} } ) {
            push @{ $bigram{$last} }, $chord;
        }
    }

    $last = $chord;
}

my $g = GraphViz2->new(
    global => { directed => 1 },
    node   => { shape => 'oval' },
    edge   => { color => 'grey' },
);

my %nodes;
my %edges;

for my $i ( keys %bigram ) {
    my $color = $i eq $key ? 'red' : 'black';

    $g->add_node( name => $i, color => $color )
        unless $nodes{$i}++;

    for my $j ( @{ $bigram{$i} } ) {
        $color = $j eq $key ? 'red' : 'black';

        $g->add_node( name => $j, color => $color )
            unless $nodes{$j}++;

        my $name = $i . ' ' . $j;
        $g->add_edge( from => $i, to => $j, label => $score{$name} )
            unless $edges{$name}++;
    }
}

$g->run( format => 'png', output_file => $0 . '.png' );
